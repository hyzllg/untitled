1、Selenium
    Selenium是目前业内最为核心的页面自动化的实现技术，全程是由JS来实现的浏览器的交互，搭配到webdriver来实现完整的自动化UI测试的效果。

2、测试框架设计模式介绍
    常规的自动化测试的技术体系，测试框架是目前企业级应用最核心的形态。
        主体的设计模式分为两种：
        1、关键字驱动
        2、POM模式
3、关键字驱动测试模式介绍
    是所有测试框架的核心基础
    适应场景：对于有对各项目在同时进行、公司内部是基于频分的项目研发来实现营收的体系化。
    关键字驱动时唯一一种可以以一套框架来适配多种不同类型的项目的形态。但是对于所有的被测项目而言，无法准确评估覆盖率。
4、POM介绍
    POM是业内公认最佳的一种设计模式。专门用于对应制定系统来量身打造的一套测试框架。
    全称叫做页面对象模型，是将系统以页面来进行区分。
    举例：
        你要实现一个用户信息修改的流程。
        登录-进入个人中心-修改个人信息并保存-再重新查看个人信息详情
        从POM角度：
        1.进入登录页面，实现页面的核心流程
        2.进入个人信息页面，实现修改个人信息的操作
        3.进入个人信息页面，实现查看个人信息的操作
        4.校验修改结果是否成功
        在POM体系下，全程都是基于页面来考虑这个流程的执行连贯性，中间会关联多少页面，每个页面分别会执行哪些内容。

5、POM结构设计与编程实现
    1.工程结构形态
        代码与数据分离
        逻辑代码与测试代码分离
    2.POM结构
        1.基类：逻辑代码的部分，主要是产生一系列在页面对象中可以被调用的函数。本身最为一个工具库的存在。
        2.页面对象类：逻辑代码的部分，结合实际的项目，提取的所有可被自动化执行的页面。类中包含页面的核心元素与页面的核心流程。
    3.测试用例类：测试代码福分。用于拼接各类页面对象，实现最终的测试流程。
    4.测试数据类： 用于提取所有在实际测试过程中需要应用的数据内容。

6、POM+Pytest实现自动化测试
    简单的POM的体系设计
        自动化测试的实现一定是要关联到和核心业务来走的，没有关联业务的自动化是无法实现落地的
7、结合数据驱动分离测试数据
    DDT+Yaml或者是常规的DDT+DATA的形态来实现数据驱动。
